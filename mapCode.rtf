{\rtf1\ansi\ansicpg936\cocoartf1138\cocoasubrtf470
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green116\blue0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab560
\pard\tx560\pardeftab560\pardirnatural

\f0\fs22 \cf2 \CocoaLigature0 //    int count = [tmap count];\cf0 \
\cf2 //    while (count--) \{\cf0 \
\cf2 //        [_map addObject:[tmap lastObject]];\cf0 \
\cf2 //        [tmap removeLastObject];\cf0 \
\cf2 //    \}\cf0 \
\cf2 //    CCSprite *board = [CCSprite spriteWithFile:@"wood_board.jpg"];\cf0 \
\cf2 //    int boardCountW =ceil(_winSize.width/[board contentSize].width);\cf0 \
\cf2 //    int boardCountH = ceil(_winSize.height/[board contentSize].height);\cf0 \
\cf2 //    for (int i=0; i<=boardCountW; i++) \{\cf0 \
\cf2 //        for (int j =0; j<=boardCountH; j++) \{\cf0 \
\cf2 //            CCSprite *board = [CCSprite spriteWithFile:@"wood_board.jpg"];\cf0 \
\cf2 //            [board setPosition:CGPointMake(i*[board contentSize].width, j*[board contentSize].height)];\cf0 \
\cf2 //            [self addChild:board z:-1];\cf0 \
\cf2 //        \}\cf0 \
\cf2 //    \}\cf0 \
\cf2 //   \cf0 \
\cf2 //  //  [self addChild:board z:-1];\cf0 \
\cf2 //    CCSprite *brick = [CCSprite spriteWithFile:@"brick.jpg"];\cf0 \
\cf2 //    _unitW = [brick contentSize].width;\cf0 \
\cf2 //    _unitH = [brick contentSize].height;\cf0 \
\cf2 //    _map = [[NSMutableArray alloc]init];\cf0 \
\cf2 //    \cf0 \
\cf2 //    int count =0;\cf0 \
\cf2 //    int columns = _winSize.width / [brick contentSize].width;\cf0 \
\cf2 //    int rows  = _winSize.height/[brick contentSize].height;\cf0 \
\cf2 //    for (int i =1; i<=rows; i++) \{\cf0 \
\cf2 //        for (int j =1; j<=columns; j++) \{\cf0 \
\cf2 //            count++;\cf0 \
\cf2 //            if(j==columns/2&&i>3)\cf0 \
\cf2 //            \{\cf0 \
\cf2 //                CCSprite *_brick = [CCSprite spriteWithFile:@"brick.jpg"];\cf0 \
\cf2 //                [_brick setPosition:CGPointMake(j*[_brick contentSize].width, i*[_brick contentSize].height)];\cf0 \
\cf2 //                [self addChild:_brick];\cf0 \
\cf2 //                [_map addObject:[[NSNumber alloc]initWithInt:BRICK]];\cf0 \
\cf2 //                \cf0 \
\cf2 //            \}\cf0 \
\cf2 //            else if(j==3*columns/4&&i<rows-3)\cf0 \
\cf2 //            \{\cf0 \
\cf2 //                CCSprite *_brick = [CCSprite spriteWithFile:@"brick.jpg"];\cf0 \
\cf2 //                [_brick setPosition:CGPointMake(j*[_brick contentSize].width, i*[_brick contentSize].height)];\cf0 \
\cf2 //                [self addChild:_brick];\cf0 \
\cf2 //                [_map addObject:[[NSNumber alloc]initWithInt:BRICK]];\cf0 \
\cf2 //                \cf0 \
\cf2 //            \}\cf0 \
\cf2 //           else if(i==rows/2&&j>columns/2+1&&j<3*columns/4)\cf0 \
\cf2 //            \{\cf0 \
\cf2 //                CCSprite *_brick = [CCSprite spriteWithFile:@"brick.jpg"];\cf0 \
\cf2 //                [_brick setPosition:CGPointMake(j*[_brick contentSize].width, i*[_brick contentSize].height)];\cf0 \
\cf2 //                [self addChild:_brick];\cf0 \
\cf2 //                [_map addObject:[[NSNumber alloc]initWithInt:BRICK]];\cf0 \
\cf2 //                \cf0 \
\cf2 //            \}\cf0 \
\cf2 //           else if(i==3*rows/4&&j>columns/2&&j<3*columns/4-1)\cf0 \
\cf2 //           \{\cf0 \
\cf2 //               CCSprite *_brick = [CCSprite spriteWithFile:@"brick.jpg"];\cf0 \
\cf2 //               [_brick setPosition:CGPointMake(j*[_brick contentSize].width, i*[_brick contentSize].height)];\cf0 \
\cf2 //               [self addChild:_brick];\cf0 \
\cf2 //               [_map addObject:[[NSNumber alloc]initWithInt:BRICK]];\cf0 \
\cf2 //               \cf0 \
\cf2 //           \}\cf0 \
\cf2 //           else if(i==3&&j>columns/3&&j<3*columns/4-1)\cf0 \
\cf2 //           \{\cf0 \
\cf2 //               CCSprite *_brick = [CCSprite spriteWithFile:@"brick.jpg"];\cf0 \
\cf2 //               [_brick setPosition:CGPointMake(j*[_brick contentSize].width, i*[_brick contentSize].height)];\cf0 \
\cf2 //               [self addChild:_brick];\cf0 \
\cf2 //               [_map addObject:[[NSNumber alloc]initWithInt:BRICK]];\cf0 \
\cf2 //               \cf0 \
\cf2 //           \}\cf0 \
\cf2 //\cf0 \
\cf2 //           else if(j == columns/3&&i == rows-8)\cf0 \
\cf2 //            \{\cf0 \
\cf2 //                [_cat setPosition:CGPointMake(j*[brick contentSize].width, i*[brick contentSize].height)];\cf0 \
\cf2 //                [_map addObject:[[NSNumber alloc]initWithInt:BLANCK]];\cf0 \
\cf2 //                printf("\\n\\tcount:%d\\n",count);\cf0 \
\cf2 //            \}\cf0 \
\cf2 //            else if(j==columns/3&&i>2&&i<rows-8)\cf0 \
\cf2 //            \{\cf0 \
\cf2 //                printf("\\n\\tcount:%d\\n",count);\cf0 \
\cf2 //\cf0 \
\cf2 //                CCSprite *_brick = [CCSprite spriteWithFile:@"brick.jpg"];\cf0 \
\cf2 //                [_brick setPosition:CGPointMake(j*[_brick contentSize].width, i*[_brick contentSize].height)];\cf0 \
\cf2 //                [self addChild:_brick];\cf0 \
\cf2 //                [_map addObject:[[NSNumber alloc]initWithInt:BRICK]];\cf0 \
\cf2 //                \cf0 \
\cf2 //            \}\cf0 \
\cf2 //            else if(j==columns/3&&i>rows-8&&i<rows-2)\cf0 \
\cf2 //            \{\cf0 \
\cf2 //                printf("\\n\\tcount:%d\\n",count);\cf0 \
\cf2 //                \cf0 \
\cf2 //                CCSprite *_brick = [CCSprite spriteWithFile:@"brick.jpg"];\cf0 \
\cf2 //                [_brick setPosition:CGPointMake(j*[_brick contentSize].width, i*[_brick contentSize].height)];\cf0 \
\cf2 //                [self addChild:_brick];\cf0 \
\cf2 //                [_map addObject:[[NSNumber alloc]initWithInt:BRICK]];\cf0 \
\cf2 //                \cf0 \
\cf2 //            \}\cf0 \
\cf2 //\cf0 \
\cf2 //            else \{\cf0 \
\cf2 //                [_map addObject:[[NSNumber alloc]initWithInt:BLANCK]];\cf0 \
\cf2 //            \}\cf0 \
\cf2 //             \cf0 \
\cf2 //        \}\cf0 \
\cf2 //    \}\cf0 \
}